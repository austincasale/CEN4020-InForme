Welcome to the usage file for InforMe. The following steps will guide you through the installation process for all portions of our project.

You are encouraged to use Google for any errors that you may encounter during the setup process.
Since installation processes may differ greatly depending on the operating system you are using,
you may wish to find OS-specific guides that suit your needs. As expected, not all computers will
encounter the same issues or errors.

Flask Application (Back-End and Website)
----------------------------------------

-**- 1. Install Python -**-

	If you have it already, great. You can skip this step.
	Install Homebrew by putting this command in your command line:
	-----------	-----------	-----------	-----------	-----------	----------- -----------	-----------
	$ /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
	$ brew install python
	-----------	-----------	-----------	-----------	-----------	----------- -----------	-----------
	Homebrew installs Setuptools and pip for you, pip is our recommended package installer. Don't use easy install unless you've gotta.

	Make sure you have pip, if you don't download it. Google is filled with hundreds of way to do this on many different operating systems.

-**- 2. Install all the packages/frameworks/modules used -**-

	Packages/frameworks/modules include: 

	- NLTK
	This page tells you how to get NLTK
	 -- http://www.nltk.org/install.html -- 
	 Now you need stopwords, and nlargest
	 http://blog.nlpapi.co/how-to-install-nltk-corporastopwords/
	 Follow this tutorial, probably best off to just download all components.
	 This stackoverflow shows how to get all components:
	 http://stackoverflow.com/questions/22211525/how-do-i-download-nltk-data
	 ----------- ----------- ----------- ----------- ----------- ----------- -----------	
	 $ python
		>>> import nltk
		>>> nltk.download('all')
	 ----------- ----------- ----------- ----------- ----------- ----------- -----------	

	- requests
		This is used to get that sweet html
	 ----------- ----------- ----------- ----------- ----------- ----------- -----------	
	 $ sudo pip install requests
	 ----------- ----------- ----------- ----------- ----------- ----------- -----------

	- beautifulsoup4
		This is used after you've got that sweet html
	 ----------- ----------- ----------- ----------- ----------- ----------- -----------	
	 $ sudo pip install beautifulsoup4
	 ----------- ----------- ----------- ----------- ----------- ----------- -----------

	- flask
		Web framework used for the post methods to the backend
	 ----------- ----------- ----------- ----------- ----------- ----------- -----------	
	 $ sudo pip install Flask
	 ----------- ----------- ----------- ----------- ----------- ----------- -----------	


-**- 3. Set up your flask virtual environment -**-
	
	Install the virtualenv
	 ----------- ----------- ----------- ----------- ----------- ----------- -----------	
	 $ sudo pip install virtualenv
	 ----------- ----------- ----------- ----------- ----------- ----------- -----------
	 or
	 ----------- ----------- ----------- ----------- ----------- ----------- -----------	
	 $ sudo easy_install virtualenv
	 ----------- ----------- ----------- ----------- ----------- ----------- -----------

	Now make a directory and the virtual environment inside the directory:
	 ----------- ----------- ----------- ----------- ----------- ----------- -----------	
	 $ mkdir myproject
	 $ cd myproject
	 $ virtualenv venv
	 ----------- ----------- ----------- ----------- ----------- ----------- -----------	
	To work in this virtual environment you have to activate it so
	 ----------- ----------- ----------- ----------- ----------- ----------- -----------	
	 $ . venv/bin/activate
	 ----------- ----------- ----------- ----------- ----------- ----------- -----------	
	This will take you back out of the virtual environment
	 ----------- ----------- ----------- ----------- ----------- ----------- -----------	
	 $ deactivate
	 ----------- ----------- ----------- ----------- ----------- ----------- -----------
	This is a tutorial to help if these short steps don't work:

	http://flask.pocoo.org/docs/0.11/installation/

	== The FlaskApp file that you need in this next step is on the github under BackEnd ==

	Now in your virtual environment place the FlaskApp file:

	Inside FlaskApp is: get.py, static, and templates
	So
	 -- templates/indexFlask.html --
	is using the css style from 
	 -- static/styles/stylesFlask.css --

	 Inside of FlaskApp/
	 Run this:
	 ----------- ----------- ----------- ----------- ----------- ----------- -----------	
	 $ export FLASK_APP=get.py
	 $ chmod a+x get.py
	 $ ./get.py
	 ----------- ----------- ----------- ----------- ----------- ----------- -----------
	 The site should deploy on 
	  -- http://localhost:5000 -- 
	 so open up your browser to check it out.
	 This is a useful tutorial to run a basic flask app if you have trouble:
	 https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-i-hello-world

	 You may have to change the last line of get.py from: 
	   app.run(host='0.0.0.0', port=80)
	 so that it isn't host='0.0.0.0'

Android Application
-------------------

* Must have the "Informe_app" folder from the project directory. Save this folder to 
 your Desktop, or a place where you can easily locate it.
 
* Must have latest version of Android installed on phone.

-**- 1. Install Android Studio:  -**-

	Head to https://developer.android.com/studio/index.html and install Android Studio, 
	specifically "android-studio-bundle-145.3360264-windows.exe".
	
	This should include the Android SDK.
	
-**- 2. Import to Android Studio:  -**-
	
	Open Android Studio and wait until program finishes loading.
	
	File > Open... > Informe_app
	
	Now you will have the project loaded into Android Studio.
	
	The main files to look at is:
	MainActivity.java
	activity_main.xml
	AndroidManifest.xml
	
	This is where the coding was done.
	
	**Warning** 
	If there are import errors, then possibly the correct SDK was
	not installed. Need to get rid of all errors to compile and run.
	
	Tools > Android > SDK Manager > Android 7 (API 24) > Install
	
-**- 3. Running the App:  -**-
	
	Developer options on the phone need to be turned on to switch on
	USB debugging on your phone. USB debugging is required to run
	the compiled app.
	
	From Android site: "On Android 4.2 and higher, the Developer options
	screen is hidden by default. To make it visible, go to Settings > About
	phone and tap Build number seven times. Return to the previous screen to
	find Developer options at the bottom"
	
	After turning on Developer options, connect the phone to the computer via
	USB. Additional drivers may automatically be installed.
	
	Click the green play button near the Top-Middle of Android Studio. A 
	prompt will pop up asking which device you would like to run the App pn.
	Your phone should be listed on here. If not, either USB debugging is not
	turned on, or the correct driver for your phone is not installed on the
	computer.
	
	
	
